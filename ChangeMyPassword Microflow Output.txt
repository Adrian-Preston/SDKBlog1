Opening existing working copy
Opening Administration.ChangeMyPassword
(function (unit, model) {

        /*
         * JavaScript code generated by mendixmodelsdk.sdk.extras.JavaScriptSerializer
         * from unit with id "b041a8cd-3839-480c-850d-cc178c13094d" of type Microflows$Microflow
         * in working copy "JavaExportApp"
         * on 13-9-2022.
         */

        var expressionSplitCondition1 = microflows.ExpressionSplitCondition.create(model);
        expressionSplitCondition1.expression = "$AccountPasswordData/NewPassword = $AccountPasswordData/ConfirmPassword";

        var exclusiveSplit1 = microflows.ExclusiveSplit.create(model);
        exclusiveSplit1.relativeMiddlePoint = {"x":430,"y":200};
        exclusiveSplit1.size = {"width":130,"height":80};
        exclusiveSplit1.splitCondition = expressionSplitCondition1;   // Note: for this property a default value is defined.
        exclusiveSplit1.caption = "Passwords equal?";

        var translation1 = texts.Translation.create(model);
        translation1.languageCode = "en_US";
        translation1.text = "The new passwords do not match.";

        var translation2 = texts.Translation.create(model);
        translation2.languageCode = "nl_NL";
        translation2.text = "De nieuwe wachtwoorden komen niet overeen.";

        var text1 = texts.Text.create(model);
        text1.translations.push(translation1);
        text1.translations.push(translation2);

        var textTemplate1 = microflows.TextTemplate.create(model);
        textTemplate1.text = text1;   // Note: for this property a default value is defined.

        var showMessageAction1 = microflows.ShowMessageAction.create(model);
        showMessageAction1.template = textTemplate1;   // Note: for this property a default value is defined.
        showMessageAction1.type = microflows.ShowMessageType.Error;

        var actionActivity1 = microflows.ActionActivity.create(model);
        actionActivity1.relativeMiddlePoint = {"x":430,"y":75};
        actionActivity1.size = {"width":120,"height":60};
        actionActivity1.action = showMessageAction1;

        var endEvent1 = microflows.EndEvent.create(model);
        endEvent1.relativeMiddlePoint = {"x":430,"y":-20};
        endEvent1.size = {"width":20,"height":20};

        var startEvent1 = microflows.StartEvent.create(model);
        startEvent1.relativeMiddlePoint = {"x":-220,"y":200};
        startEvent1.size = {"width":20,"height":20};

        var closeFormAction1 = microflows.CloseFormAction.create(model);

        var actionActivity2 = microflows.ActionActivity.create(model);
        actionActivity2.relativeMiddlePoint = {"x":1110,"y":200};
        actionActivity2.size = {"width":120,"height":60};
        actionActivity2.action = closeFormAction1;

        var endEvent2 = microflows.EndEvent.create(model);
        endEvent2.relativeMiddlePoint = {"x":1230,"y":200};
        endEvent2.size = {"width":20,"height":20};

        var memberChange1 = microflows.MemberChange.create(model);
        // Note: this is an unsupported internal property of the Model SDK which is subject to change.
        memberChange1.__attribute.updateWithRawValue("System.User.Password");
        memberChange1.value = "$AccountPasswordData/NewPassword";

        var changeObjectAction1 = microflows.ChangeObjectAction.create(model);
        changeObjectAction1.items.push(memberChange1);
        changeObjectAction1.refreshInClient = true;
        changeObjectAction1.commit = microflows.CommitEnum.Yes;
        changeObjectAction1.changeVariableName = "Account";

        var actionActivity3 = microflows.ActionActivity.create(model);
        actionActivity3.relativeMiddlePoint = {"x":620,"y":200};
        actionActivity3.size = {"width":120,"height":60};
        actionActivity3.action = changeObjectAction1;
        actionActivity3.caption = "Save password";
        actionActivity3.autoGenerateCaption = false;

        var expressionSplitCondition2 = microflows.ExpressionSplitCondition.create(model);
        expressionSplitCondition2.expression = "$OldPasswordOkay";

        var exclusiveSplit2 = microflows.ExclusiveSplit.create(model);
        exclusiveSplit2.relativeMiddlePoint = {"x":230,"y":200};
        exclusiveSplit2.size = {"width":120,"height":80};
        exclusiveSplit2.splitCondition = expressionSplitCondition2;   // Note: for this property a default value is defined.
        exclusiveSplit2.caption = "Old password okay?";

        var endEvent3 = microflows.EndEvent.create(model);
        endEvent3.relativeMiddlePoint = {"x":230,"y":-20};
        endEvent3.size = {"width":20,"height":20};

        var basicCodeActionParameterValue1 = microflows.BasicCodeActionParameterValue.create(model);
        basicCodeActionParameterValue1.argument = "$Account/Name";

        var javaActionParameterMapping1 = microflows.JavaActionParameterMapping.create(model);
        // Note: this is an unsupported internal property of the Model SDK which is subject to change.
        javaActionParameterMapping1.__parameter.updateWithRawValue("System.VerifyPassword.userName");
        javaActionParameterMapping1.parameterValue = basicCodeActionParameterValue1;   // Note: for this property a default value is defined.

        var basicCodeActionParameterValue2 = microflows.BasicCodeActionParameterValue.create(model);
        basicCodeActionParameterValue2.argument = "$AccountPasswordData/OldPassword";

        var javaActionParameterMapping2 = microflows.JavaActionParameterMapping.create(model);
        // Note: this is an unsupported internal property of the Model SDK which is subject to change.
        javaActionParameterMapping2.__parameter.updateWithRawValue("System.VerifyPassword.password");
        javaActionParameterMapping2.parameterValue = basicCodeActionParameterValue2;   // Note: for this property a default value is defined.

        var javaActionCallAction1 = microflows.JavaActionCallAction.create(model);
        // Note: this is an unsupported internal property of the Model SDK which is subject to change.
        javaActionCallAction1.__javaAction.updateWithRawValue("System.VerifyPassword");
        javaActionCallAction1.parameterMappings.push(javaActionParameterMapping1);
        javaActionCallAction1.parameterMappings.push(javaActionParameterMapping2);
        javaActionCallAction1.outputVariableName = "OldPasswordOkay";

        var actionActivity4 = microflows.ActionActivity.create(model);
        actionActivity4.relativeMiddlePoint = {"x":55,"y":200};
        actionActivity4.size = {"width":150,"height":60};
        actionActivity4.action = javaActionCallAction1;

        var translation3 = texts.Translation.create(model);
        translation3.languageCode = "en_US";
        translation3.text = "The password has been updated.";

        var translation4 = texts.Translation.create(model);
        translation4.languageCode = "nl_NL";
        translation4.text = "Het wachtwoord is aangepast.";

        var text2 = texts.Text.create(model);
        text2.translations.push(translation3);
        text2.translations.push(translation4);

        var textTemplate2 = microflows.TextTemplate.create(model);
        textTemplate2.text = text2;   // Note: for this property a default value is defined.

        var showMessageAction2 = microflows.ShowMessageAction.create(model);
        showMessageAction2.template = textTemplate2;   // Note: for this property a default value is defined.

        var actionActivity5 = microflows.ActionActivity.create(model);
        actionActivity5.relativeMiddlePoint = {"x":790,"y":200};
        actionActivity5.size = {"width":120,"height":60};
        actionActivity5.action = showMessageAction2;

        var translation5 = texts.Translation.create(model);
        translation5.languageCode = "en_US";
        translation5.text = "The password is not correct.";

        var translation6 = texts.Translation.create(model);
        translation6.languageCode = "nl_NL";
        translation6.text = "Het wachtwoord is onjuist.";

        var text3 = texts.Text.create(model);
        text3.translations.push(translation5);
        text3.translations.push(translation6);

        var textTemplate3 = microflows.TextTemplate.create(model);
        textTemplate3.text = text3;   // Note: for this property a default value is defined.

        var validationFeedbackAction1 = microflows.ValidationFeedbackAction.create(model);
        validationFeedbackAction1.feedbackTemplate = textTemplate3;   // Note: for this property a default value is defined.
        validationFeedbackAction1.objectVariableName = "AccountPasswordData";
        validationFeedbackAction1.attribute = model.findAttributeByQualifiedName("Administration.AccountPasswordData.OldPassword");

        var actionActivity6 = microflows.ActionActivity.create(model);
        actionActivity6.relativeMiddlePoint = {"x":230,"y":75};
        actionActivity6.size = {"width":120,"height":60};
        actionActivity6.action = validationFeedbackAction1;

        var objectType1 = datatypes.ObjectType.create(model);
        objectType1.entity = model.findEntityByQualifiedName("Administration.AccountPasswordData");

        var accountPasswordData1 = microflows.MicroflowParameterObject.create(model);
        accountPasswordData1.relativeMiddlePoint = {"x":-220,"y":75};
        accountPasswordData1.size = {"width":30,"height":30};
        accountPasswordData1.name = "AccountPasswordData";
        accountPasswordData1.variableType = objectType1;   // Note: for this property a default value is defined.

        var associationRetrieveSource1 = microflows.AssociationRetrieveSource.create(model);
        associationRetrieveSource1.startVariableName = "AccountPasswordData";
        associationRetrieveSource1.association = model.findAssociationBaseByQualifiedName("Administration.AccountPasswordData_Account");

        var retrieveAction1 = microflows.RetrieveAction.create(model);
        retrieveAction1.retrieveSource = associationRetrieveSource1;   // Note: for this property a default value is defined.
        retrieveAction1.outputVariableName = "Account";

        var actionActivity7 = microflows.ActionActivity.create(model);
        actionActivity7.relativeMiddlePoint = {"x":-115,"y":200};
        actionActivity7.size = {"width":120,"height":60};
        actionActivity7.action = retrieveAction1;

        var deleteAction1 = microflows.DeleteAction.create(model);
        deleteAction1.deleteVariableName = "AccountPasswordData";

        var actionActivity8 = microflows.ActionActivity.create(model);
        actionActivity8.relativeMiddlePoint = {"x":950,"y":200};
        actionActivity8.size = {"width":120,"height":60};
        actionActivity8.action = deleteAction1;

        var microflowObjectCollection1 = microflows.MicroflowObjectCollection.create(model);
        microflowObjectCollection1.objects.push(exclusiveSplit1);
        microflowObjectCollection1.objects.push(actionActivity1);
        microflowObjectCollection1.objects.push(endEvent1);
        microflowObjectCollection1.objects.push(startEvent1);
        microflowObjectCollection1.objects.push(actionActivity2);
        microflowObjectCollection1.objects.push(endEvent2);
        microflowObjectCollection1.objects.push(actionActivity3);
        microflowObjectCollection1.objects.push(exclusiveSplit2);
        microflowObjectCollection1.objects.push(endEvent3);
        microflowObjectCollection1.objects.push(actionActivity4);
        microflowObjectCollection1.objects.push(actionActivity5);
        microflowObjectCollection1.objects.push(actionActivity6);
        microflowObjectCollection1.objects.push(accountPasswordData1);
        microflowObjectCollection1.objects.push(actionActivity7);
        microflowObjectCollection1.objects.push(actionActivity8);

        var enumerationCase1 = microflows.EnumerationCase.create(model);
        enumerationCase1.value = "true";

        var sequenceFlow1 = microflows.SequenceFlow.create(model);
        sequenceFlow1.originConnectionIndex = 1;
        sequenceFlow1.destinationConnectionIndex = 3;
        sequenceFlow1.originBezierVector = {"width":15,"height":0};
        sequenceFlow1.destinationBezierVector = {"width":-30,"height":0};
        sequenceFlow1.caseValue = enumerationCase1;   // Note: for this property a default value is defined.

        var noCase1 = microflows.NoCase.create(model);

        var sequenceFlow2 = microflows.SequenceFlow.create(model);
        sequenceFlow2.originConnectionIndex = 1;
        sequenceFlow2.destinationConnectionIndex = 3;
        sequenceFlow2.originBezierVector = {"width":30,"height":0};
        sequenceFlow2.destinationBezierVector = {"width":-15,"height":0};
        sequenceFlow2.caseValue = noCase1;   // Note: for this property a default value is defined.

        var enumerationCase2 = microflows.EnumerationCase.create(model);
        enumerationCase2.value = "false";

        var sequenceFlow3 = microflows.SequenceFlow.create(model);
        sequenceFlow3.destinationConnectionIndex = 2;
        sequenceFlow3.originBezierVector = {"width":0,"height":-15};
        sequenceFlow3.destinationBezierVector = {"width":0,"height":30};
        sequenceFlow3.caseValue = enumerationCase2;   // Note: for this property a default value is defined.

        var noCase2 = microflows.NoCase.create(model);

        var sequenceFlow4 = microflows.SequenceFlow.create(model);
        sequenceFlow4.destinationConnectionIndex = 2;
        sequenceFlow4.originBezierVector = {"width":0,"height":-30};
        sequenceFlow4.destinationBezierVector = {"width":0,"height":15};
        sequenceFlow4.caseValue = noCase2;   // Note: for this property a default value is defined.

        var noCase3 = microflows.NoCase.create(model);

        var sequenceFlow5 = microflows.SequenceFlow.create(model);
        sequenceFlow5.originConnectionIndex = 1;
        sequenceFlow5.destinationConnectionIndex = 3;
        sequenceFlow5.originBezierVector = {"width":30,"height":0};
        sequenceFlow5.destinationBezierVector = {"width":-30,"height":0};
        sequenceFlow5.caseValue = noCase3;   // Note: for this property a default value is defined.

        var noCase4 = microflows.NoCase.create(model);

        var sequenceFlow6 = microflows.SequenceFlow.create(model);
        sequenceFlow6.originConnectionIndex = 1;
        sequenceFlow6.destinationConnectionIndex = 3;
        sequenceFlow6.originBezierVector = {"width":15,"height":0};
        sequenceFlow6.destinationBezierVector = {"width":-30,"height":0};
        sequenceFlow6.caseValue = noCase4;   // Note: for this property a default value is defined.

        var enumerationCase3 = microflows.EnumerationCase.create(model);
        enumerationCase3.value = "true";

        var sequenceFlow7 = microflows.SequenceFlow.create(model);
        sequenceFlow7.originConnectionIndex = 1;
        sequenceFlow7.destinationConnectionIndex = 3;
        sequenceFlow7.originBezierVector = {"width":15,"height":0};
        sequenceFlow7.destinationBezierVector = {"width":-15,"height":0};
        sequenceFlow7.caseValue = enumerationCase3;   // Note: for this property a default value is defined.

        var noCase5 = microflows.NoCase.create(model);

        var sequenceFlow8 = microflows.SequenceFlow.create(model);
        sequenceFlow8.originConnectionIndex = 1;
        sequenceFlow8.destinationConnectionIndex = 3;
        sequenceFlow8.originBezierVector = {"width":30,"height":0};
        sequenceFlow8.destinationBezierVector = {"width":-15,"height":0};
        sequenceFlow8.caseValue = noCase5;   // Note: for this property a default value is defined.

        var enumerationCase4 = microflows.EnumerationCase.create(model);
        enumerationCase4.value = "false";

        var sequenceFlow9 = microflows.SequenceFlow.create(model);
        sequenceFlow9.destinationConnectionIndex = 2;
        sequenceFlow9.originBezierVector = {"width":0,"height":-15};
        sequenceFlow9.destinationBezierVector = {"width":0,"height":30};
        sequenceFlow9.caseValue = enumerationCase4;   // Note: for this property a default value is defined.

        var noCase6 = microflows.NoCase.create(model);

        var sequenceFlow10 = microflows.SequenceFlow.create(model);
        sequenceFlow10.originConnectionIndex = 1;
        sequenceFlow10.destinationConnectionIndex = 3;
        sequenceFlow10.originBezierVector = {"width":30,"height":0};
        sequenceFlow10.destinationBezierVector = {"width":-30,"height":0};
        sequenceFlow10.caseValue = noCase6;   // Note: for this property a default value is defined.

        var noCase7 = microflows.NoCase.create(model);

        var sequenceFlow11 = microflows.SequenceFlow.create(model);
        sequenceFlow11.destinationConnectionIndex = 2;
        sequenceFlow11.originBezierVector = {"width":0,"height":-30};
        sequenceFlow11.destinationBezierVector = {"width":0,"height":15};
        sequenceFlow11.caseValue = noCase7;   // Note: for this property a default value is defined.

        var noCase8 = microflows.NoCase.create(model);

        var sequenceFlow12 = microflows.SequenceFlow.create(model);
        sequenceFlow12.originConnectionIndex = 1;
        sequenceFlow12.destinationConnectionIndex = 3;
        sequenceFlow12.originBezierVector = {"width":30,"height":0};
        sequenceFlow12.destinationBezierVector = {"width":-30,"height":0};
        sequenceFlow12.caseValue = noCase8;   // Note: for this property a default value is defined.

        var noCase9 = microflows.NoCase.create(model);

        var sequenceFlow13 = microflows.SequenceFlow.create(model);
        sequenceFlow13.originConnectionIndex = 1;
        sequenceFlow13.destinationConnectionIndex = 3;
        sequenceFlow13.originBezierVector = {"width":30,"height":0};
        sequenceFlow13.destinationBezierVector = {"width":-30,"height":0};
        sequenceFlow13.caseValue = noCase9;   // Note: for this property a default value is defined.

        var voidType1 = datatypes.VoidType.create(model);

        var translation7 = texts.Translation.create(model);
        translation7.languageCode = "en_US";

        var text4 = texts.Text.create(model);
        text4.translations.push(translation7);

        var changeMyPassword1 = microflows.Microflow.createIn(unit);
        changeMyPassword1.name = "ChangeMyPassword";
        changeMyPassword1.objectCollection = microflowObjectCollection1;   // Note: for this property a default value is defined.
        changeMyPassword1.flows.push(sequenceFlow1);
        changeMyPassword1.flows.push(sequenceFlow2);
        changeMyPassword1.flows.push(sequenceFlow3);
        changeMyPassword1.flows.push(sequenceFlow4);
        changeMyPassword1.flows.push(sequenceFlow5);
        changeMyPassword1.flows.push(sequenceFlow6);
        changeMyPassword1.flows.push(sequenceFlow7);
        changeMyPassword1.flows.push(sequenceFlow8);
        changeMyPassword1.flows.push(sequenceFlow9);
        changeMyPassword1.flows.push(sequenceFlow10);
        changeMyPassword1.flows.push(sequenceFlow11);
        changeMyPassword1.flows.push(sequenceFlow12);
        changeMyPassword1.flows.push(sequenceFlow13);
        changeMyPassword1.microflowReturnType = voidType1;
        changeMyPassword1.applyEntityAccess = true;
        changeMyPassword1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("Administration.Administrator"));
        changeMyPassword1.allowedModuleRoles.push(model.findModuleRoleByQualifiedName("Administration.User"));
        changeMyPassword1.concurrencyErrorMessage = text4;   // Note: for this property a default value is defined.

        sequenceFlow1.origin = exclusiveSplit1;
        sequenceFlow1.destination = actionActivity3;

        sequenceFlow2.origin = actionActivity2;
        sequenceFlow2.destination = endEvent2;

        sequenceFlow3.origin = exclusiveSplit1;
        sequenceFlow3.destination = actionActivity1;

        sequenceFlow4.origin = actionActivity1;
        sequenceFlow4.destination = endEvent1;

        sequenceFlow5.origin = actionActivity3;
        sequenceFlow5.destination = actionActivity5;

        sequenceFlow6.origin = startEvent1;
        sequenceFlow6.destination = actionActivity7;

        sequenceFlow7.origin = exclusiveSplit2;
        sequenceFlow7.destination = exclusiveSplit1;

        sequenceFlow8.origin = actionActivity4;
        sequenceFlow8.destination = exclusiveSplit2;

        sequenceFlow9.origin = exclusiveSplit2;
        sequenceFlow9.destination = actionActivity6;

        sequenceFlow10.origin = actionActivity5;
        sequenceFlow10.destination = actionActivity8;

        sequenceFlow11.origin = actionActivity6;
        sequenceFlow11.destination = endEvent3;

        sequenceFlow12.origin = actionActivity7;
        sequenceFlow12.destination = actionActivity4;

        sequenceFlow13.origin = actionActivity8;
        sequenceFlow13.destination = actionActivity2;

})